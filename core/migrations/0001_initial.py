# Generated by Django 5.2.1 on 2025-05-20 18:21

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Endereço de e-mail')),
                ('user_type', models.CharField(choices=[('admin', 'Administrador'), ('consultor', 'Consultor'), ('cliente', 'Cliente')], default='cliente', max_length=10, verbose_name='Tipo de Usuário')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClienteProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patrimonio_total_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Patrimônio Total Estimado (R$)')),
                ('rendimentos_estimados_anuais', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Rendimentos Anuais Estimados (R$)')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cliente_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Cliente')),
            ],
            options={
                'verbose_name': 'Perfil do Cliente',
                'verbose_name_plural': 'Perfis de Clientes',
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_holding', models.CharField(max_length=255, verbose_name='Nome da Holding')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_criacao_registro', models.DateField(blank=True, null=True, verbose_name='Data de Criação/Registro')),
                ('has_bank_savings', models.BooleanField(default=False, verbose_name='Possui Poupança/Dinheiro em Banco?')),
                ('bank_savings_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor em Banco (R$)')),
                ('has_heirs', models.BooleanField(default=False, verbose_name='Possui Herdeiros?')),
                ('heir_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantidade de Herdeiros')),
                ('has_succession_plan', models.BooleanField(default=False, verbose_name='Já Pensou no Plano Sucessório?')),
                ('has_paid_inventory', models.BooleanField(default=False, verbose_name='Já Pagou Inventário de Parente?')),
                ('has_rental_properties', models.BooleanField(default=False, verbose_name='Possui Imóveis Alugados?')),
                ('rental_property_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantidade de Imóveis Alugados')),
                ('rental_income_monthly', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Renda Mensal de Aluguéis (R$)')),
                ('rental_expenses_monthly', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Despesas Mensais com Imóveis Alugados (R$)')),
                ('has_litigation_concerns', models.BooleanField(default=False, verbose_name='Receio de Ações Judiciais?')),
                ('has_legal_issues', models.BooleanField(default=False, verbose_name='Já Teve Problemas Legais / Setor de Risco?')),
                ('wants_asset_protection', models.BooleanField(default=False, verbose_name='Quer Proteger Patrimônio Familiar?')),
                ('protected_assets', models.TextField(blank=True, help_text='Descrição dos bens a proteger', null=True, verbose_name='Bens a Proteger')),
                ('has_companies', models.BooleanField(default=False, verbose_name='É Sócio de Empresas?')),
                ('company_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantidade de Empresas')),
                ('company_profit_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Lucro Anual Aproximado das Empresas (R$)')),
                ('distributes_profits', models.BooleanField(default=False, verbose_name='Costuma Distribuir Lucros ou Reinvestir?')),
                ('has_multiple_assets', models.BooleanField(default=False, verbose_name='Possui Muitos Bens em Seu Nome?')),
                ('wants_efficient_management', models.BooleanField(default=False, verbose_name='Gostaria de Facilitar Gestão/Venda de Bens?')),
                ('has_management_difficulties', models.BooleanField(default=False, verbose_name='Já Teve Dificuldades com Controle Patrimonial?')),
                ('is_legally_official', models.BooleanField(default=False, help_text='Marque se a holding foi constituída legalmente e está operacional.', verbose_name='Holding Oficializada Legalmente')),
                ('data_oficializacao', models.DateField(blank=True, null=True, verbose_name='Data de Oficialização Legal')),
                ('clientes', models.ManyToManyField(limit_choices_to={'user_type': 'cliente'}, related_name='holdings_participadas', to=settings.AUTH_USER_MODEL, verbose_name='Clientes/Sócios')),
                ('consultor_responsavel', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'consultor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='holdings_assessoradas', to=settings.AUTH_USER_MODEL, verbose_name='Consultor Responsável')),
            ],
            options={
                'verbose_name': 'Holding',
                'verbose_name_plural': 'Holdings',
                'ordering': ['nome_holding'],
            },
        ),
        migrations.CreateModel(
            name='AnaliseEconomia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_referencia', models.PositiveIntegerField(verbose_name='Ano de Referência')),
                ('economia_tributaria_estimada', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Economia Tributária Estimada (R$)')),
                ('patrimonio_liquido_projetado', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Patrimônio Líquido Projetado (R$)')),
                ('data_calculo', models.DateField(auto_now_add=True, verbose_name='Data do Cálculo')),
                ('holding', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analise_economia', to='core.holding', verbose_name='Holding Analisada')),
            ],
            options={
                'verbose_name': 'Análise Econômica',
                'verbose_name_plural': 'Análises Econômicas',
            },
        ),
        migrations.CreateModel(
            name='ProcessoHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_atual', models.CharField(choices=[('aguardando_documentos', 'Aguardando Documentos'), ('documentacao_em_analise', 'Documentação em Análise'), ('elaboracao_contrato', 'Elaboração de Contrato Social'), ('registro_junta', 'Registro na Junta Comercial'), ('providencias_pos_registro', 'Providências Pós-Registro'), ('concluido', 'Concluído'), ('concluido_oficializado', 'Concluído e Oficializado Legalmente'), ('cancelado', 'Cancelado')], default='aguardando_documentos', max_length=30, verbose_name='Status Atual do Processo')),
                ('data_inicio_processo', models.DateTimeField(auto_now_add=True, verbose_name='Data de Início')),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Internas')),
                ('cliente_principal', models.ForeignKey(limit_choices_to={'user_type': 'cliente'}, on_delete=django.db.models.deletion.PROTECT, related_name='processos_holding', to=settings.AUTH_USER_MODEL, verbose_name='Cliente Principal')),
                ('holding_associada', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processo_criacao', to='core.holding', verbose_name='Holding Associada')),
            ],
            options={
                'verbose_name': 'Processo de Holding',
                'verbose_name_plural': 'Processos de Holding',
                'ordering': ['-data_inicio_processo'],
            },
        ),
        migrations.CreateModel(
            name='SimulationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('number_of_properties', models.IntegerField(default=0)),
                ('total_property_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('inventory_cost_without', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('inventory_cost_with', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('inventory_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('has_companies', models.BooleanField(default=False)),
                ('number_of_companies', models.IntegerField(default=0)),
                ('company_tax_regime', models.CharField(blank=True, max_length=50, null=True)),
                ('monthly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('annual_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('profit_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('receives_rent', models.BooleanField(default=False)),
                ('monthly_rent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('annual_rent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('rental_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('number_of_heirs', models.IntegerField(default=0)),
                ('inventory_time_without', models.IntegerField(default=0)),
                ('inventory_time_with', models.IntegerField(default=0)),
                ('conflict_risk', models.CharField(default='Não Aplicável', max_length=50)),
                ('total_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulation_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado da Simulação',
                'verbose_name_plural': 'Resultados das Simulações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_documento_logico', models.CharField(default='[Nome Lógico Não Especificado]', help_text="Nome descritivo para agrupar versões. Ex: 'Contrato Social', 'RG do Sócio X'.", max_length=255, verbose_name='Nome/Tipo do Documento (Ex: Contrato Social, RG Sócio)')),
                ('arquivo', models.FileField(upload_to='documentos_holdings/%Y/%m/%d/', verbose_name='Arquivo')),
                ('categoria', models.CharField(choices=[('pessoais_socios', 'Documentos pessoais dos sócios'), ('patrimonio_incorporado', 'Documentos do patrimônio a ser incorporado'), ('societarios_registro', 'Documentos societários (Junta/Cartório)'), ('providencias_pos_registro', 'Outras providências pós-registro'), ('outros', 'Outros Documentos')], max_length=30, verbose_name='Categoria')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('descricao_adicional', models.TextField(blank=True, null=True, verbose_name='Descrição Adicional (Opcional)')),
                ('versao', models.PositiveIntegerField(default=1, verbose_name='Versão')),
                ('nome_original_arquivo', models.CharField(blank=True, max_length=255, verbose_name='Nome Original do Arquivo Enviado')),
                ('enviado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_enviados', to=settings.AUTH_USER_MODEL, verbose_name='Enviado Por')),
                ('processo_holding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='core.processoholding', verbose_name='Processo da Holding')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['processo_holding', 'nome_documento_logico', '-versao', '-data_upload'],
                'unique_together': {('processo_holding', 'nome_documento_logico', 'versao', 'categoria')},
            },
        ),
    ]
